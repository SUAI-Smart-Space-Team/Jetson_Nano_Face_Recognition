{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { Avatar, Dialog, IconButton, InputBase, LinearProgress, List, ListItem, ListItemAvatar, ListItemSecondaryAction, ListItemText, TextField, Typography } from \"@material-ui/core\";\nimport { Add } from '@material-ui/icons';\nimport useSWR, { mutate } from 'swr';\nimport { useRouter } from 'next/router';\n\nconst fetcher = url => fetch(url).then(res => res.json()).then(json => json.data);\n\nconst contentType = 'application/json';\n\nconst UndefinedUserList = () => {\n  const {\n    data: images,\n    error\n  } = useSWR('/api/images', fetcher, {\n    refreshInterval: 1000\n  });\n  if (!images) return /*#__PURE__*/_jsx(LinearProgress, {\n    color: \"secondary\"\n  });\n  const groups = images.reduce((group, key, index) => {\n    return (index % 2 == 0 ? group.push([key]) : group[group.length - 1].push(key)) && group;\n  }, []);\n  return /*#__PURE__*/_jsx(List, {\n    children: groups.length > 0 ? groups.map((group, i) => /*#__PURE__*/_jsx(ListItem, {\n      button: true,\n      children: /*#__PURE__*/_jsx(InnerListItem, {\n        group: group\n      })\n    }, i)) : /*#__PURE__*/_jsx(Typography, {\n      variant: \"caption\",\n      display: \"block\",\n      align: \"center\",\n      children: \"No undefined users found\"\n    })\n  });\n};\n\nconst InnerListItem = ({\n  group\n}) => {\n  const {\n    0: name,\n    1: setName\n  } = useState('');\n  const {\n    0: open,\n    1: setOpen\n  } = useState({\n    open: false,\n    src: ''\n  });\n  const router = useRouter();\n\n  const handleInputChange = e => {\n    setName(e.target.value);\n  };\n\n  const handleCreateUser = async () => {\n    await fetch('/api/users', {\n      method: 'POST',\n      headers: {\n        Accept: contentType,\n        'Content-Type': contentType\n      },\n      body: JSON.stringify({\n        name: name || `User - ${Math.floor(Math.random() * 100000)}`,\n        images: [group[0]._id, group[1]._id]\n      })\n    });\n    mutate('/api/images');\n    router.push('/dashboard');\n    setName('');\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [group.sort(x => x.croped ? 0 : x ? -1 : 1).map(image => /*#__PURE__*/_jsx(ListItemAvatar, {\n      onClick: e => e.target.src && setOpen({\n        open: true,\n        src: e.target.src\n      }),\n      children: /*#__PURE__*/_jsx(Avatar, {\n        src: image.url\n      })\n    }, image._id)), /*#__PURE__*/_jsx(InputBase, {\n      style: {\n        width: 400\n      },\n      placeholder: \"Undefined User\",\n      value: name,\n      onChange: handleInputChange\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      primary: new Date(group[0].date).toLocaleString()\n    }), /*#__PURE__*/_jsx(ListItemSecondaryAction, {\n      children: /*#__PURE__*/_jsx(IconButton, {\n        onClick: handleCreateUser,\n        children: /*#__PURE__*/_jsx(Add, {})\n      })\n    }), /*#__PURE__*/_jsx(Dialog, {\n      open: open.open,\n      onClose: () => setOpen(state => _objectSpread(_objectSpread({}, state), {}, {\n        open: false\n      })),\n      children: /*#__PURE__*/_jsx(\"img\", {\n        src: open.src\n      })\n    })]\n  });\n};\n\nexport default UndefinedUserList;","map":null,"metadata":{},"sourceType":"module"}