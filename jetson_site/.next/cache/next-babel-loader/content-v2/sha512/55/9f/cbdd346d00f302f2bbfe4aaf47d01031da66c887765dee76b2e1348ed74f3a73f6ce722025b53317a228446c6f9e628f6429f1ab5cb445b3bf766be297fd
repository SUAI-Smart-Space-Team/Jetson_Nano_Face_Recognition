{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { Avatar, Collapse, Dialog, IconButton, InputBase, List, ListItem, ListItemAvatar, ListItemIcon, ListItemSecondaryAction, ListItemText } from \"@material-ui/core\";\nimport { ExpandLess, ExpandMore, Add, Delete, Edit, Save } from '@material-ui/icons';\nimport { mutate } from 'swr';\nimport { useRouter } from 'next/router';\nconst contentType = 'application/json';\n\nconst RecognizedItem = ({\n  user\n}) => {\n  const {\n    0: modal,\n    1: setModal\n  } = useState(false);\n  const {\n    0: open,\n    1: setOpen\n  } = useState({\n    open: false,\n    src: ''\n  });\n  const {\n    0: edit,\n    1: setEdit\n  } = useState(false);\n  const {\n    0: name,\n    1: setName\n  } = useState(user.name);\n  const router = useRouter();\n\n  const handleClick = () => {\n    setModal(!modal);\n  };\n\n  const handleDeleteUser = async () => {\n    await fetch('/api/users', {\n      method: 'DELETE',\n      headers: {\n        Accept: contentType,\n        'Content-Type': contentType\n      },\n      body: JSON.stringify({\n        _id: user._id\n      })\n    });\n    mutate('/api/users');\n    router.push('/dashboard');\n  };\n\n  const handleEdit = async () => {\n    setEdit(!edit);\n\n    if (edit) {\n      await fetch('/api/users', {\n        method: 'PUT',\n        headers: {\n          Accept: contentType,\n          'Content-Type': contentType\n        },\n        body: JSON.stringify({\n          name,\n          id: user._id\n        })\n      });\n    }\n\n    mutate('/api/users');\n    router.push('/dashboard');\n  };\n\n  const handleInputChange = e => {\n    setName(e.target.value);\n  };\n\n  const avatar = user.images.find(image => !image.croped);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(ListItem, {\n      button: true,\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(IconButton, {\n          edge: \"end\",\n          onClick: handleEdit,\n          children: edit ? /*#__PURE__*/_jsx(Save, {}) : /*#__PURE__*/_jsx(Edit, {})\n        })\n      }), /*#__PURE__*/_jsx(ListItemAvatar, {\n        onClick: e => e.target.src && setOpen({\n          open: true,\n          src: e.target.src\n        }),\n        children: /*#__PURE__*/_jsx(Avatar, {\n          src: avatar.url\n        })\n      }, avatar._id), edit ? /*#__PURE__*/_jsx(InputBase, {\n        fullWidth: true,\n        value: name,\n        onChange: handleInputChange\n      }) : /*#__PURE__*/_jsx(ListItemText, {\n        primary: user.name\n      }), /*#__PURE__*/_jsx(ListItemIcon, {\n        onClick: handleClick,\n        children: modal ? /*#__PURE__*/_jsx(ExpandLess, {}) : /*#__PURE__*/_jsx(ExpandMore, {})\n      }), /*#__PURE__*/_jsx(ListItemSecondaryAction, {\n        children: /*#__PURE__*/_jsx(IconButton, {\n          onClick: handleDeleteUser,\n          children: /*#__PURE__*/_jsx(Delete, {})\n        })\n      })]\n    }), /*#__PURE__*/_jsx(Collapse, {\n      in: modal,\n      timeout: \"auto\",\n      unmountOnExit: true,\n      children: /*#__PURE__*/_jsxs(List, {\n        component: \"div\",\n        disablePadding: true,\n        children: [/*#__PURE__*/_jsx(ListItem, {\n          button: true,\n          children: user.images.map(image => image.croped && /*#__PURE__*/_jsx(ListItemAvatar, {\n            onClick: e => e.target.src && setOpen({\n              open: true,\n              src: e.target.src\n            }),\n            children: /*#__PURE__*/_jsx(Avatar, {\n              src: image.url\n            })\n          }, image._id))\n        }), /*#__PURE__*/_jsx(ListItemSecondaryAction, {\n          children: /*#__PURE__*/_jsx(IconButton, {\n            edge: \"end\",\n            children: /*#__PURE__*/_jsx(Add, {})\n          })\n        })]\n      })\n    }), /*#__PURE__*/_jsx(Dialog, {\n      open: open.open,\n      onClose: () => setOpen(state => _objectSpread(_objectSpread({}, state), {}, {\n        open: false\n      })),\n      children: /*#__PURE__*/_jsx(\"img\", {\n        src: open.src\n      })\n    })]\n  });\n};\n\nexport default RecognizedItem;","map":null,"metadata":{},"sourceType":"module"}