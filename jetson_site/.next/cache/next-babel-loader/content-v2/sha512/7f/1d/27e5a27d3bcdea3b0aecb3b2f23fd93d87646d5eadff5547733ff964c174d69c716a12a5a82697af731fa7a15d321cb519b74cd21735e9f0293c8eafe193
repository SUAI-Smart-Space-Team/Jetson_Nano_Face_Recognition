{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { Button, Container, FormControl, Grid, IconButton, InputAdornment, InputLabel, OutlinedInput, Paper, Typography } from \"@material-ui/core\";\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\nimport { useRouter } from 'next/router';\nconst contentType = 'application/json';\n\nconst Index = () => {\n  const {\n    0: values,\n    1: setValues\n  } = useState({\n    login: '',\n    password: '',\n    showPassword: false\n  });\n  const router = useRouter();\n\n  const handleChange = prop => event => {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      [prop]: event.target.value\n    }));\n  };\n\n  const handleClickShowPassword = () => {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      showPassword: !values.showPassword\n    }));\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const handlePostLogin = async () => {\n    // const res = await fetch('/api/login', {\n    //     method: 'POST',\n    //     headers: {\n    //         Accept: contentType,\n    //         'Content-Type': contentType,\n    //     },\n    //     body: JSON.stringify({\n    //         values\n    //     }),\n    // })\n    // console.log(res)\n    router.push('/dashboard');\n  };\n\n  return /*#__PURE__*/_jsx(Container, {\n    maxWidth: \"xs\",\n    style: {\n      marginTop: 200\n    },\n    children: /*#__PURE__*/_jsxs(Grid, {\n      container: true,\n      spacing: 5,\n      children: [/*#__PURE__*/_jsx(Grid, {\n        container: true,\n        item: true,\n        xs: 12,\n        spacing: 3,\n        children: /*#__PURE__*/_jsx(Typography, {\n          variant: \"h2\",\n          align: \"center\",\n          children: \"Login\"\n        })\n      }), /*#__PURE__*/_jsx(Grid, {\n        container: true,\n        item: true,\n        xs: 12,\n        spacing: 3,\n        children: /*#__PURE__*/_jsxs(FormControl, {\n          variant: \"outlined\",\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsx(InputLabel, {\n            htmlFor: \"outlined-adornment-login\",\n            children: \"Login\"\n          }), /*#__PURE__*/_jsx(OutlinedInput, {\n            id: \"outlined-adornment-login\",\n            type: 'text',\n            value: values.login,\n            onChange: handleChange('login'),\n            label: \"Login\"\n          })]\n        })\n      }), /*#__PURE__*/_jsx(Grid, {\n        container: true,\n        item: true,\n        xs: 12,\n        spacing: 3,\n        children: /*#__PURE__*/_jsxs(FormControl, {\n          variant: \"outlined\",\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsx(InputLabel, {\n            htmlFor: \"outlined-adornment-password\",\n            children: \"Password\"\n          }), /*#__PURE__*/_jsx(OutlinedInput, {\n            id: \"outlined-adornment-password\",\n            type: values.showPassword ? 'text' : 'password',\n            value: values.password,\n            onChange: handleChange('password'),\n            endAdornment: /*#__PURE__*/_jsx(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsx(IconButton, {\n                onClick: handleClickShowPassword,\n                onMouseDown: handleMouseDownPassword,\n                edge: \"end\",\n                children: values.showPassword ? /*#__PURE__*/_jsx(Visibility, {}) : /*#__PURE__*/_jsx(VisibilityOff, {})\n              })\n            }),\n            label: \"Password\"\n          })]\n        })\n      }), /*#__PURE__*/_jsx(Grid, {\n        container: true,\n        item: true,\n        xs: 12,\n        spacing: 3,\n        children: /*#__PURE__*/_jsx(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: handlePostLogin,\n          children: \" login\"\n        })\n      })]\n    })\n  });\n};\n\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}