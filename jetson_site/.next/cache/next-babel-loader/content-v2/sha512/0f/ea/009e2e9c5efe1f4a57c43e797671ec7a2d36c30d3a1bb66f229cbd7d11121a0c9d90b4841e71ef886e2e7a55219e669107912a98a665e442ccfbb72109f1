{"ast":null,"code":"import _defineProperty from \"/home/jetson-cam/Face-Recognition-Jetson-Nano-main/jetson_site/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _objectWithoutProperties from \"/home/jetson-cam/Face-Recognition-Jetson-Nano-main/jetson_site/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { useRouter } from 'next/router';\nimport NextLink from 'next/link';\nimport MuiLink from '@material-ui/core/Link';\nexport var NextLinkComposed = /*#__PURE__*/React.forwardRef(function NextLinkComposed(props, ref) {\n  var to = props.to,\n      linkAs = props.linkAs,\n      href = props.href,\n      replace = props.replace,\n      scroll = props.scroll,\n      passHref = props.passHref,\n      shallow = props.shallow,\n      prefetch = props.prefetch,\n      locale = props.locale,\n      other = _objectWithoutProperties(props, [\"to\", \"linkAs\", \"href\", \"replace\", \"scroll\", \"passHref\", \"shallow\", \"prefetch\", \"locale\"]);\n\n  return /*#__PURE__*/_jsx(NextLink, {\n    href: to,\n    prefetch: prefetch,\n    as: linkAs,\n    replace: replace,\n    scroll: scroll,\n    shallow: shallow,\n    passHref: passHref,\n    locale: locale,\n    children: /*#__PURE__*/_jsx(\"a\", _objectSpread({\n      ref: ref\n    }, other))\n  });\n});\nvar Link = /*#__PURE__*/React.forwardRef(function Link(props, ref) {\n  var _props$activeClassNam = props.activeClassName,\n      activeClassName = _props$activeClassNam === void 0 ? 'active' : _props$activeClassNam,\n      linkAs = props.as,\n      classNameProps = props.className,\n      href = props.href,\n      noLinkStyle = props.noLinkStyle,\n      role = props.role,\n      other = _objectWithoutProperties(props, [\"activeClassName\", \"as\", \"className\", \"href\", \"noLinkStyle\", \"role\"]);\n\n  var router = useRouter();\n  var pathname = typeof href === 'string' ? href : href.pathname;\n  var className = clsx(classNameProps, _defineProperty({}, activeClassName, router.pathname === pathname && activeClassName));\n  var isExternal = typeof href === 'string' && (href.indexOf('http') === 0 || href.indexOf('mailto:') === 0);\n\n  if (isExternal) {\n    if (noLinkStyle) {\n      return /*#__PURE__*/_jsx(\"a\", _objectSpread({\n        className: className,\n        href: href,\n        ref: ref\n      }, other));\n    }\n\n    return /*#__PURE__*/_jsx(MuiLink, _objectSpread({\n      className: className,\n      href: href,\n      ref: ref\n    }, other));\n  }\n\n  if (noLinkStyle) {\n    return /*#__PURE__*/_jsx(NextLinkComposed, _objectSpread({\n      className: className,\n      ref: ref,\n      to: href\n    }, other));\n  }\n\n  return /*#__PURE__*/_jsx(MuiLink, _objectSpread({\n    component: NextLinkComposed,\n    linkAs: linkAs,\n    className: className,\n    ref: ref,\n    to: href\n  }, other));\n});\nexport default Link;","map":null,"metadata":{},"sourceType":"module"}