{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/home/jetson-cam/Face-Recognition-Jetson-Nano-main/jetson_site/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/jetson-cam/Face-Recognition-Jetson-Nano-main/jetson_site/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/jetson-cam/Face-Recognition-Jetson-Nano-main/jetson_site/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { Button, Container, FormControl, Grid, IconButton, InputAdornment, InputLabel, OutlinedInput, Paper, Typography } from \"@material-ui/core\";\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\nimport { useRouter } from 'next/router';\nvar contentType = 'application/json';\n\nvar Index = function Index() {\n  var _useState = useState({\n    login: '',\n    password: '',\n    showPassword: false\n  }),\n      values = _useState[0],\n      setValues = _useState[1];\n\n  var router = useRouter();\n\n  var handleChange = function handleChange(prop) {\n    return function (event) {\n      setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, prop, event.target.value)));\n    };\n  };\n\n  var handleClickShowPassword = function handleClickShowPassword() {\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      showPassword: !values.showPassword\n    }));\n  };\n\n  var handleMouseDownPassword = function handleMouseDownPassword(event) {\n    event.preventDefault();\n  };\n\n  var handlePostLogin = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // const res = await fetch('/api/login', {\n              //     method: 'POST',\n              //     headers: {\n              //         Accept: contentType,\n              //         'Content-Type': contentType,\n              //     },\n              //     body: JSON.stringify({\n              //         values\n              //     }),\n              // })\n              // console.log(res)\n              router.push('/dashboard');\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handlePostLogin() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsx(Container, {\n    maxWidth: \"xs\",\n    style: {\n      marginTop: 200\n    },\n    children: /*#__PURE__*/_jsxs(Grid, {\n      container: true,\n      spacing: 5,\n      children: [/*#__PURE__*/_jsx(Grid, {\n        container: true,\n        item: true,\n        xs: 12,\n        spacing: 3,\n        children: /*#__PURE__*/_jsx(Typography, {\n          variant: \"h2\",\n          align: \"center\",\n          children: \"Login\"\n        })\n      }), /*#__PURE__*/_jsx(Grid, {\n        container: true,\n        item: true,\n        xs: 12,\n        spacing: 3,\n        children: /*#__PURE__*/_jsxs(FormControl, {\n          variant: \"outlined\",\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsx(InputLabel, {\n            htmlFor: \"outlined-adornment-login\",\n            children: \"Login\"\n          }), /*#__PURE__*/_jsx(OutlinedInput, {\n            id: \"outlined-adornment-login\",\n            type: 'text',\n            value: values.login,\n            onChange: handleChange('login'),\n            label: \"Login\"\n          })]\n        })\n      }), /*#__PURE__*/_jsx(Grid, {\n        container: true,\n        item: true,\n        xs: 12,\n        spacing: 3,\n        children: /*#__PURE__*/_jsxs(FormControl, {\n          variant: \"outlined\",\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsx(InputLabel, {\n            htmlFor: \"outlined-adornment-password\",\n            children: \"Password\"\n          }), /*#__PURE__*/_jsx(OutlinedInput, {\n            id: \"outlined-adornment-password\",\n            type: values.showPassword ? 'text' : 'password',\n            value: values.password,\n            onChange: handleChange('password'),\n            endAdornment: /*#__PURE__*/_jsx(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsx(IconButton, {\n                onClick: handleClickShowPassword,\n                onMouseDown: handleMouseDownPassword,\n                edge: \"end\",\n                children: values.showPassword ? /*#__PURE__*/_jsx(Visibility, {}) : /*#__PURE__*/_jsx(VisibilityOff, {})\n              })\n            }),\n            label: \"Password\"\n          })]\n        })\n      }), /*#__PURE__*/_jsx(Grid, {\n        container: true,\n        item: true,\n        xs: 12,\n        spacing: 3,\n        children: /*#__PURE__*/_jsx(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: handlePostLogin,\n          children: \" login\"\n        })\n      })]\n    })\n  });\n};\n\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}